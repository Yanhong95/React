{"ast":null,"code":"import _objectSpread from \"/Users/CYH/react-app/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/CYH/react-app/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('You continue!');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igkey => {\n      return ingredients[igkey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCanceled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      purchasable: this.state.purchasable,\n      disabled: disabledInfo,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/CYH/react-app/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","keys","map","igkey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger' ;\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component{\n    state={\n        ingredients:{\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false ,\n        purchasing: false,\n    }\n\n    updatePurchaseState(ingredients){\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            },0);\n        this.setState({purchasable: sum > 0})\n    }\n\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0){\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    purchaseCancelHandler = () =>{\n        this.setState({purchasing: false})\n    }\n    \n    purchaseContinueHandler = () =>{\n        alert('You continue!');\n    }\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        }\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        // {salad: true, meat: false, ...}\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary \n                        ingredients={this.state.ingredients}\n                        purchaseCanceled={this.purchaseCancelHandler}\n                        purchaseContinued={this.purchaseContinueHandler} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls \n                    ingredientAdded = {this.addIngredientHandler}\n                    ingredientRemoved = {this.removeIngredientHandler}\n                    purchasable = {this.state.purchasable}\n                    disabled = {disabledInfo}\n                    ordered = {this.purchaseHandler}\n                    price = {this.state.totalPrice}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}